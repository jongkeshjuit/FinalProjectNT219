version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: qsc_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: qsc_grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=quantum_admin_123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    ports:
      - "3030:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL metrics (chỉ khi postgres đang chạy)
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: qsc_postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://quantum_user:quantum_secure_pass_123@host.docker.internal:5432/quantum_commerce?sslmode=disable"
    ports:
      - "9187:9187"
    restart: unless-stopped
    profiles: ["with-postgres"]

  # Redis metrics (chỉ khi redis đang chạy)  
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: qsc_redis_exporter
    environment:
      REDIS_ADDR: "redis://host.docker.internal:6379"
      REDIS_PASSWORD: "redis_secure_pass_456"
    ports:
      - "9121:9121"
    restart: unless-stopped
    profiles: ["with-redis"]

volumes:
  prometheus_data:
  grafana_data:
