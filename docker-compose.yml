version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: qc_postgres
    environment:
      POSTGRES_DB: quantum_commerce
      POSTGRES_USER: quantum_user
      POSTGRES_PASSWORD: quantum_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quantum_user -d quantum_commerce"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: qc_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Vault (for advanced secret management)
  vault:
    image: hashicorp/vault:1.15
    container_name: qc_vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: quantum_dev_token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200

  # Main API
  api:
    build: .
    container_name: qc_api
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=development
      - USE_REAL_CRYPTO=true
      - DATABASE_URL=postgresql://quantum_user:quantum_pass@qc_postgres:5432/quantum_commerce
      - REDIS_URL=redis://qc_redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./secrets:/app/secrets:ro

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: qc_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - api

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: qc_grafana
    ports:
      - "3030:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=quantum_admin_123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
