version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: qsc_postgres
    environment:
      POSTGRES_DB: quantum_commerce
      POSTGRES_USER: ${DB_USER:-qsc_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-qsc_user}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: qsc_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_pass}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # IBE Service
  ibe-service:
    build:
      context: .
      dockerfile: services/ibe/Dockerfile
    container_name: qsc_ibe
    environment:
      - MASTER_KEY_PATH=/secure/keys/ibe_master
      - SERVICE_PORT=8001
      - LOG_LEVEL=INFO
    volumes:
      - ./keys:/secure/keys:ro
      - ./crypto:/app/crypto
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Dilithium Signature Service
  dilithium-service:
    build:
      context: .
      dockerfile: services/dilithium/Dockerfile
    container_name: qsc_dilithium
    environment:
      - SECURITY_LEVEL=2
      - KEY_STORAGE=file
      - SERVICE_PORT=8002
    volumes:
      - ./keys:/secure/keys:ro
      - ./crypto:/app/crypto
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy

  # Main Web Application
  web-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qsc_webapp
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-qsc_user}:${DB_PASSWORD:-secure_password}@postgres:5432/quantum_commerce
      - REDIS_URL=redis://default:${REDIS_PASSWORD:-redis_secure_pass}@redis:6379/0
      - IBE_SERVICE_URL=http://ibe-service:8001
      - DILITHIUM_SERVICE_URL=http://dilithium-service:8002
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwt-secret-key}
      - ENVIRONMENT=development
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - ibe-service
      - dilithium-service
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: qsc_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./webapp:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - web-app

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: qsc_nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web-app
      - frontend

volumes:
  postgres_data:
  redis_data:


networks:
  default:
    name: qsc_network
